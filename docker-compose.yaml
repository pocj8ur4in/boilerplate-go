services:
    boilerplate-server:
        build:
            context: .
            dockerfile: Dockerfile
            target: dev
        image: boilerplate-server:dev
        container_name: boilerplate-server
        ports:
            - '38080:8080'
        environment:
            - CGO_ENABLED=1
            - CONFIG_PATH=config.json
        volumes:
            - .:/app
            - ./config.json:/app/config.json
        depends_on:
            boilerplate-postgres:
                condition: service_healthy
            boilerplate-redis:
                condition: service_healthy
        restart: unless-stopped
        networks:
            - boilerplate-network

    boilerplate-postgres:
        image: postgres:17.4
        container_name: boilerplate-postgres
        environment:
            POSTGRES_DB: boilerplate
            POSTGRES_USER: boilerplate_user
            POSTGRES_PASSWORD: boilerplate_password
        ports:
            - '35432:5432'
        volumes:
            - postgres_data:/var/lib/postgresql/data
        restart: unless-stopped
        networks:
            - boilerplate-network
        healthcheck:
            test: ['CMD-SHELL', 'pg_isready -U boilerplate_user -d boilerplate']
            interval: 10s
            timeout: 5s
            retries: 5

    boilerplate-redis:
        image: redis:7-alpine
        container_name: boilerplate-redis
        ports:
            - '36379:6379'
        volumes:
            - redis_data:/data
        restart: unless-stopped
        networks:
            - boilerplate-network
        healthcheck:
            test: ['CMD', 'redis-cli', 'ping']
            interval: 10s
            timeout: 5s
            retries: 5

volumes:
    postgres_data:
    redis_data:

networks:
    boilerplate-network:
        driver: bridge
